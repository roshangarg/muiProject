{"version":3,"sources":["FirebaseConfig.js","Components/NotesCard.js","pages/Create.js","Components/Layout.js","App.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","useStyles","makeStyles","avatar","backgroundColor","card","category","green","red","blue","pink","NoteCard","useState","setCard","useEffect","unsub","onSnapshot","collection","snapshot","docs","map","doc","data","id","handleDelete","a","deleteDoc","classes","Container","breakpointCols","default","1100","700","className","columnClassName","Card","elevation","CardHeader","Avatar","toUpperCase","action","IconButton","onClick","DeleteOutlined","title","subheader","CardContent","Typography","variant","color","detail","field","marginTop","marginBottom","display","Create","setTitle","setDetail","error","setError","titleError","setTitleError","detailError","setDetailError","setCategory","history","useHistory","handleSubmit","e","preventDefault","collectionRef","payload","addDoc","then","push","console","log","component","noValidate","autoComplete","onSubmit","TextField","onChange","target","value","label","required","fullWidth","multiline","minRows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","theme","page","width","height","overflow","padding","spacing","drawer","drawerpaper","root","active","background","appbar","toolbar","mixins","Date","flexGrow","marginLeft","Layout","children","location","useLocation","matches","useMediaQuery","isActive","open","setOpen","menuItem","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","Toolbar","format","Drawer","anchor","paper","List","item","ListItem","button","style","cursor","pathname","ListItemIcon","ListItemText","primary","edge","aria-label","fontSize","SwipeableDrawer","onOpen","Box","textAlign","createTheme","palette","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd723421.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n\n\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyBePJZD_tAVoxqxnWH5heeUxNujrGJA3I4\",\n\n  authDomain: \"createnotesapp-6e01f.firebaseapp.com\",\n\n  projectId: \"createnotesapp-6e01f\",\n\n  storageBucket: \"createnotesapp-6e01f.appspot.com\",\n\n  messagingSenderId: \"139527473248\",\n\n  appId: \"1:139527473248:web:a5c64b4340a2e370759b05\",\n\n  measurementId: \"G-5XQ0SB1TPD\"\n\n};\n\n\n// Initialize Firebase\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore();\n\n ","import Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { IconButton, Typography } from \"@material-ui/core\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport { pink, red } from \"@mui/material/colors\";\nimport { db } from '../FirebaseConfig'\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { collection, deleteDoc, doc, onSnapshot } from \"firebase/firestore\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Masonry from \"react-masonry-css\";\n\nimport { Container } from \"@material-ui/core\";\nimport { async } from \"@firebase/util\";\n\nconst useStyles=makeStyles({\n  avatar:{\n    backgroundColor:(card)=>{\n      if(card.category==\"money\"){\n        return green[700]\n      }\n      if(card.category==\"last due\"){\n        return red[500]\n      }\n      if(card.category==\"submitted\"){\n        return blue[500]\n      }\n      return pink[500]\n    }\n  }\n})\n\nconst NoteCard = () => {\n  const breakpoints = {\n        default:3,\n        1100:2,\n        700:1,\n      }\n  const [card , setCard] = useState([])\n  useEffect(() => {\n   const unsub= onSnapshot(collection(db,'Notes'), (snapshot) => {\n     setCard(snapshot.docs.map(doc => ({...doc.data(), id:doc.id})))\n\n    })\n  \n    return () => {\n      unsub();\n    }\n  }, [])\n  const handleDelete = async(id) => {\n    await deleteDoc(doc(db,\"Notes\",id))\n  }\n  const classes = useStyles(card)\n  \n  return (\n <div>\n  <Container>\n    <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n      {card.map((card) => (\n        <Card key={card.id} elevation={1}>\n        <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            {\n              card.category[0].toUpperCase()\n            }\n            \n\n          </Avatar>\n        }\n          action={\n            <IconButton onClick={() => handleDelete(card.id)} >\n              <DeleteOutlined/>\n            </IconButton>\n          }\n          title= {card.title}\n          subheader={card.category}\n        />\n        <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n                {card.detail}\n            </Typography>\n        </CardContent>\n       \n      </Card>\n      ))\n    }\n       </Masonry>\n       </Container>\n    </div>\n  );\n};\n\nexport default NoteCard;\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { FormControlLabel, FormLabel, makeStyles } from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { addDoc, collection, doc } from \"firebase/firestore\"; \nimport { db } from '../FirebaseConfig'\n\n\nimport FormControl from '@material-ui/core/FormControl'\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst useStyles = makeStyles(\n  {\n    field:{\n      marginTop:20,\n      marginBottom:20,\n      display:\"block\"\n\n    }\n  }\n);\n\nconst Create = () => {\n  const classes = useStyles();\n  const [title,setTitle] = useState('')\n  const [detail,setDetail]= useState('')\n  const [error , setError] = useState(false)\n  const [titleError,setTitleError] = useState(false)\n  const [detailError,setDetailError]= useState(false)\n  const [category ,setCategory] = useState('money')\n  const history = useHistory()\n  const handleSubmit = async(e)=>{\n    e.preventDefault()\n    setTitleError(false)\n    setDetailError(false)\n    if(title==''){\n      setTitleError(true)\n    }\n    if(detail==''){\n      setDetailError(true)\n    }\n    if(title && detail){\n      try{\n        const collectionRef = collection(db,\"Notes\")\n        const payload = {\n          title,\n          detail,\n          category\n        }\n        await addDoc(collectionRef, payload)\n        .then(()=> history.push('/'))\n      }\n      \n      catch(err){\n        setError(true)\n        console.log(err)\n      }\n    }\n  }\n  return (\n    <Container>\n      {error && <span> something went wrong</span>}\n      <Typography variant=\"h6\" component=\"h2\" color=\"secondary\">\n        Create a new Note\n      </Typography>\n      <br />\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} >\n        <TextField\n        onChange={(e)=> setTitle(e.target.value)}\n        className={classes.field}\n        label=\"Note title\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        required\n        fullWidth\n        error={titleError}\n        />\n         <TextField\n        onChange={(e)=> setDetail(e.target.value)}\n\n        className={classes.field}\n        label=\"Note details\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        multiline\n        minRows={4}\n        required\n        fullWidth\n        error={detailError}\n\n        />\n        <FormControl className={classes.field}>\n              <FormLabel > Note Category   </FormLabel>\n                <RadioGroup value={category} onChange={(e)=> setCategory(e.target.value)}>\n                <FormControlLabel control={<Radio/>} label=\"Money\" value=\"money\" />\n                <FormControlLabel control={<Radio/>} label=\"Remainder\" value=\"Remainder\" />\n                <FormControlLabel control={<Radio/>} label=\"Last Due\" value=\"last due\" />\n                <FormControlLabel control={<Radio/>} label=\"submitted\" value=\"submitted\" />\n                </RadioGroup>\n        </FormControl>\n    \n         <Button\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        endIcon={<KeyboardArrowRightIcon />}\n      >Submit</Button>\n      </form>\n     \n\n      <br />\n    </Container>\n  );\n};\n\nexport default Create;\n","import { makeStyles } from \"@material-ui/core\";\nimport Drawer from '@material-ui/core/Drawer';\nimport { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport {IconButton} from \"@material-ui/core\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport { useState } from \"react\";\nimport {AddCircleOutlineOutlined, SubjectOutlined} from \"@material-ui/icons\"\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { format } from \"date-fns\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  Box,\n  Card,\n  Container,\n  FormControl,\n  List,\n  ListItem,\n  ListItemText,\n  SwipeableDrawer,\n \n} from \"@material-ui/core\";\n\nconst drawerwidth = 240;\nconst useStyles = makeStyles((theme)=>{\n  return{\n  page: {\n      backgroundColor:\"#f9f9f9\",\n      width: '100%',\n      height:'90vh',\n      overflow:'scroll',\n      padding:theme.spacing(3)\n  },\n  drawer:{\n    width : drawerwidth\n  },\n  drawerpaper:{\n    width : drawerwidth\n  },\n  root:{\n      display:\"flex\"\n  },\n  active:{\n    background:\"#f4f4f4\"\n  },\n  title:{\n    padding:theme.spacing(2)\n  },\n  appbar:{\n    width:`calc(100% - ${drawerwidth}px)`\n  },\n  toolbar:theme.mixins.toolbar,\n  Date:{\n    flexGrow:1\n  },\n  avatar:{\n    marginLeft:theme.spacing(2)\n  }\n}\n});\nconst Layout = ({ children }) => {\n    const classes = useStyles()\n    const history = useHistory()\n    const location = useLocation()\n    const matches = useMediaQuery('(min-width:600px)');\n    const isActive = useMediaQuery('(max-width:600px)');\n    const [open, setOpen] = useState(false);\n    const menuItem = [\n      {\n        text: \"My Notes\",\n        icon : <SubjectOutlined color=\"secondary\"/>,\n        path:\"/\"\n      },\n      {\n        text: \"Create Notes\",\n        icon : <AddCircleOutlineOutlined color=\"secondary\"/>,\n        path:\"/create\"\n      }\n    ]\n  return (\n    \n    <div className={classes.root}>\n      {matches &&\n      <div>\n        {/* App bar */}\n        <AppBar elevation={0} className={classes.appbar}>\n          <Toolbar>\n            <Typography className={classes.Date}>\n            {format(new Date(),'do MMMM Y')}\n            </Typography>\n            <Typography>\n              Roshan\n            </Typography>\n            \n          </Toolbar>\n        </AppBar>\n       \n\n       \n        \n        <Drawer \n         className = {classes.drawer}\n         variant=\"permanent\"\n         anchor=\"left\"\n         classes={{paper:classes.drawerpaper}}\n        >\n            <div>\n                <Typography variant=\"h5\" className={classes.title}>\n                    Roshan Notes\n                </Typography>\n            </div>\n            {/* List item links */}\n          <List>\n            {menuItem.map( item =>(\n              <ListItem \n                button\n                style={{cursor:'pointer'}}\n                onClick={() => history.push(item.path)}\n                className={location.pathname==item.path ? classes.active:null}\n                key={item.text}>\n                <ListItemIcon>\n                  {item.icon}\n                </ListItemIcon>\n                <ListItemText primary={item.text}/>\n              </ListItem>\n            ))}  \n          </List>\n        </Drawer>\n        </div>\n}\n{\n  isActive && <div>\n    <AppBar style={{background:'black' ,color:'white'}} elevation={0} >\n          <Toolbar  >\n          <IconButton\n  edge=\"start\"\n  \n  aria-label=\"icon drawer\"\n  onClick={() => {\n    setOpen(true);\n  }}\n  \n>\n  <MenuIcon\n   style={{color:'white'}}\n    fontSize=\"large\"\n  />\n</IconButton>\n<SwipeableDrawer\n  anchor=\"left\"\n  open={open}\n  onClick={() => {\n    setOpen(false);\n  }}\n  onOpen={() => {}}\n>\n  <div style={{ width: 240 }}>\n    <Box marginTop='2rem' marginBottom='2rem' textAlign=\"center\">Roshan Garg</Box>\n    <List>\n            {menuItem.map( item =>(\n              <ListItem \n                button\n                style={{cursor:'pointer'}}\n                onClick={() => history.push(item.path)}\n                className={location.pathname==item.path ? classes.active:null}\n                key={item.text}>\n                <ListItemIcon>\n                  {item.icon}\n                </ListItemIcon>\n                <ListItemText primary={item.text}/>\n              </ListItem>\n            ))}  \n          </List>\n  </div>\n</SwipeableDrawer>\n            <Typography className={classes.Date}>\n            {format(new Date(),'do MMMM Y')}\n            </Typography>\n            <Typography>\n              Roshan\n            </Typography>\n            \n          </Toolbar>\n        </AppBar>\n  \n</div>\n}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n          {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n// import Notes from './pages/Notes'\nimport NoteCard from './Components/NotesCard';\nimport Create from './pages/Create'\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport Layout from './Components/Layout';\n\n\n\n\nconst theme = createTheme({\n  palette:{\n    primary:{\n      main: '#fefefe'\n    },\n    secondary:purple,\n  },\n  typography:{\n    fontFamily:\"Quicksand\",\n    fontWeightLight:400,\n    fontWeightRegular:500,\n    fontWeightMedium:600,\n    fontWeightBold:700,\n    \n  }\n})\n\nfunction App() {\n  return (\n    <div className='App'>\n\n    <ThemeProvider theme={theme}>\n    <Router>\n      <Layout>\n          <Switch>\n                <Route exact path=\"/\">\n                  <NoteCard />\n                </Route>\n                <Route path=\"/create\">\n                  <Create />\n                </Route>\n          </Switch>\n      </Layout>\n    </Router>\n    </ThemeProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}